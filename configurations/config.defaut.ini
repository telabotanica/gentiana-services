; Encodage : UTF-8

; +------------------------------------------------------------------------------------------------------+
; URLs
; Le séparateur utilisé par le framework lorsqu'il génère des URL pour séparer les arguments.
; Pour remettre les valeurs par défaut, utitliser : "php:ini_get('arg_separator.output')"
url_arg_separateur_sortie = "&"

; +------------------------------------------------------------------------------------------------------+
; Info sur l'application
info.nom = Services d'IdentiPlante et PictoFlora
; Abréviation de l'application
info.abr = del-services
; Version du Framework nécessaire au fonctionnement de cette application
info.framework.version = 0.4
;Encodage de l'application
encodage_appli = "UTF-8"

; +------------------------------------------------------------------------------------------------------+
; Débogage
; Indique si oui ou non on veut afficher le débogage.
debogage = true
;	Indique sous quelle forme les méssages de débogage doivent s'afficher :
;		 - "php:Debug::MODE_ECHO" : le message est affiché en utilisant echo
;		 - "php:Debug::MODE_NOTICE" : le message est affiché en utilisant une erreur de type notice
;		 - "php:Debug::MODE_ENTETE_HTTP" : les messages sont envoyés dans un entête HTTP "X_REST_DEBOGAGE".
;		 - "Autre valeur" : les messages sont formatés puis retournés par la méthode de débogage utilisée.
debogage_mode = "php:Debug::MODE_ECHO"
; Indique si oui ou non on veut lancer le chronométrage
chronometrage = false

; +------------------------------------------------------------------------------------------------------+
; Paramètrage de la base de données.
; Abstraction de la base de données.
bdd_abstraction = "pdo"
; Protocole de la base de données.
bdd_protocole = "mysql"
; Nom du serveur de bases de données.
bdd_serveur = "localhost:3306"
; Nom de l'utilisateur de la base de données.
bdd_utilisateur = ""
; Mot de passe de l'utilisateur de la base de données.
bdd_mot_de_passe = ""
; Nom de la base de données principale.
bdd_nom = "tb_del"
; Encodage de la base de données principale au format base de données (ex. pour l'utf-8 ne pas mettre le tiret!).
bdd_encodage = "utf8"

; +------------------------------------------------------------------------------------------------------+
; Infos sur les services
; chemin direct aux services
serveur.baseURL = /services/del/
; URL à rediriger
serveur.baseAlternativeURL = /service:del:0.1/

; +------------------------------------------------------------------------------------------------------+
; CONFIG GÉNÉRALE de DEL

; URL de base des services
url_base = "http://localhost/"
; URL de base des services de DEL
url_service_base = "{ref:url_base}service:del:0.1/"

; Espaces de noms
chemin_del_commun = "../../commun/del"

; Droits des utilisateurs
droit_coordinateur = "1"
droit_superadmin = "2"
; Liste des ips (nom de domaine) autorisés à accéder aux services de DEL
ip_autorisees = "127.0.0.1, 193.54.123.169, 193.54.123.216"

; Lien de base vers l'appli DEL
obs_appli_lien = "http://www.tela-botanica.org/appli:identiplante"
img_appli_lien = "http://www.tela-botanica.org/appli:pictoflora"

; Lien de base vers la fiche de l'observation dans DEL
obs_fiche_tpl = "{ref:obs_appli_lien}#obs~%s"
img_fiche_tpl = "{ref:img_appli_lien}#img~%s"

; Liste des valeurs autorisés pour certains paramètres d'URL :
valeurs_ordre = "asc, desc"
valeurs_tri = "date_transmission, date_observation, votes, tags, points"
valeurs_referentiel = "bdtfx, bdtxa, isfan, apd"

; Liste des mots-clés CEL utilisés dans IdentiPlante/PictoFlora
mots_cles_cel_affiches = "fleur,fleurs,feuille,feuilles,ecorce,fruit,fruits,port,defiphoto,plantnet"

; +------------------------------------------------------------------------------------------------------+
; SERVICES du CEL
; URL de base des services du CEL
urlServiceBaseCel = "{ref:url_base}service:cel:"
; Service du CEL pour manipuler une image à distance
urlServiceCelImage = "{ref:urlServiceBaseCel}CelImage/";
; Service du CEL pour manipuler une observation à distance
urlServiceCelObs = "{ref:urlServiceBaseCel}CelObs/";
; Service du CEL permetant d'obtenir la liste des communes pour l'auto-complétion
urlServiceCelCommune = "{ref:urlServiceBaseCel}LocationSearch/";
; Squelette d'Url permettant d'afficher une image du CEL (remplace %s par l'id de l'image sans underscore)
cel_img_url_tpl = "http://api.tela-botanica.org/img:%09d%s.jpg"

; +------------------------------------------------------------------------------------------------------+
; SERVICES d'eFlore
; URL de base des services d'eFlore
url_service_base_eflore = "{ref:url_base}service:eflore:0.1/"

; +------------------------------------------------------------------------------------------------------+
; APPLI OBS = PictoFlora
[appli_img]
; Filtres de l'url (=paramètres) pour lesquel un tri est possible
tris_possibles = "date_transmission, date_observation, votes, tags, points"
; Identifiant du protocole par défaut (3 = Capitalisation d'image)
protocole_defaut = "3"
; Formats disponibles pour les images :
img_formats_possibles = "O, CRX2S, CRS, CXS, CS, XS, S, M, L, XL, X2L, X3L"

; +------------------------------------------------------------------------------------------------------+
; APPLI OBS = IdentiPlante
[appli_obs]
; Filtres de l'url (=paramètres) pour lesquel un tri est possible
tris_possibles = "date_observation"

; +------------------------------------------------------------------------------------------------------+
; CONFIGURATIONS des SERVICES
[mots-cles]
; Masque de filtrage possible pour la consultation :
masques_possibles = "image,auteur.id"
; Mapping champs JSON / champs base de données :
mapping = "
	id_tag = id_mot_cle,
	ce_image = image,
	ce_utilisateur = auteur.id,
	date = date,
	tag = mot_cle"

[commentaires]
; Masque de filtrage possible pour la consultation :
masques_possibles = "proposition,observation"
; Mapping champs JSON / champs base de données :
mapping = "
	id_commentaire = id_commentaire,
	ce_observation = observation,
	ce_proposition = proposition,
	ce_commentaire_parent = id_parent,
	ce_utilisateur = auteur.id,
	texte = texte,
	utilisateur_nom = auteur.nom,
	utilisateur_prenom = auteur.prenom,
	utilisateur_courriel = auteur.courriel,
	date = date,
	nom_sel = nom_sel,
	nom_sel_nn = nom_sel_nn,
	nom_ret_nn = nom_ret_nn,
	nom_referentiel = nom_referentiel,
	proposition_initiale = proposition_initiale"

[communes]
; Masque de filtrage possible pour la consultation :
masques_possibles = "masque.nom"

[determinations]
; Masque de filtrage possible pour la consultation :
masques_possibles = "masque.protocole,masque.valeur_vote_min";
; Mapping champs JSON / champs base de données :
mapping = "
	famille = famille,
	ns = nom_sel,
	nn = nom_sel_nn,
	date = date_observation,
	tag = mots_cles_texte,
	commune = zone_geo"
; Mots-clés du CEL à prendre en compte dans DEL
mots_cles_cel_affiches = "fleur,fleurs,feuille,feuilles,ecorce,fruit,fruits,port,plantnet,plantscan_new";
; Template d'URL pour l'affichage des images du web service ListeImagesDeterminationsProbables
url_image_tpl = "http://api.tela-botanica.org/img:%sXL.jpg"
; Template d'URL pour la fiche eFlore d'un nom
url_fiche_eflore_tpl = "http://www.tela-botanica.org/nn%s";

[nomstaxons]
; Masque de filtrage possible pour la consultation :
masques_possibles = "masque.nom,masque.referentiel"
; URL de base du service appelé pour autocompléter les noms de taxons
url_autocompletion_tpl = "{ref:url_service_base_eflore}%s/noms?masque=%s&recherche=etendue&retour.format=min&navigation.limite=50&ns.structure=au";

[protocoles]
; Mapping champs JSON / champs base de données :
mapping = "
	id_protocole = protocole.id,
	intitule = protocole.intitule,
	descriptif = protocole.descriptif,
	tag = protocole.tag,
	mots_cles = protocole.mots_cles"

[syndication]
; Masque de filtrage possible pour la consultation, tout type de syndication confondus :
masques_possibles = "auteur,espece,observation,image,protocole"
; Mapping champs JSON / champs BDD pour tous les sous-services
;TODO : si problématique séparer en mapping spécifique à chaque sous-service et fusionner avec les params ..._filtres
mapping = "
	espece = nom_sel,
	observation = ce_observation,
	image = id_image,
	protocole = cd_protocole"

; Filtres disponibles pour chaque type de syndication
commentaire_filtres = "auteur,espece,observation"
vote_filtres = "protocole"
tag_filtres = ""

; Liste des formats de flux disponibles
formats = "rss1,rss2,atom"

; Editeur du flux
editeur = "Tela Botanica"

; Infos sur le générateur
generateur_nom = "DEL - Syndication"
generateur_version = "1.0"

; Format du Guid de DEL pour le flux de syndication
commentaire_guid_tpl = "urn:lsid:tela-botanica.org:del:commentaire%s"
vote_guid_tpl = "urn:lsid:tela-botanica.org:del:vote%s"
tag_guid_tpl = "urn:lsid:tela-botanica.org:del:tag%s"

; Titre
commentaire_titre = "identiPlante : commentaires et propositions"
vote_titre = "pictoFlora : votes"
tag_titre = "pictoFlora : tags"

; Descriptions des flux
commentaire_dsc = "Ce flux regroupe les dernières déterminations et commentaires rédigés dans l'application identiPlante"
vote_dsc = "Ce flux regroupe les derniers votes sur les images de pictoFlora"
tag_dsc = "Ce flux regroupe les derniers tags des images de pictoFlora"

[observations]
; Masque de filtrage possible pour la consultation :
masques_possibles = "masque,masque.famille,masque.genre,
	masque.referentiel, masque.ns,masque.nn,masque.auteur,masque.date,
	masque.commune,masque.departement,masque.tag,masque.espece,masque.type"
; Valeurs par défaut pour les paramètres de l'url :
parametres_valeurs_defaut = "
	navigation.depart = 0,
	navigation.limite = 10,
	tri = date_transmission,
	ordre = desc"
; Mapping champs JSON / champs base de données :
mapping = "
	id_observation = id_observation,
	date_observation = date_observation,
	date_transmission = date_transmission,
	famille = determination.famille,
	nom_sel = determination.ns,
	nom_sel_nn = determination.nn,
	nt = determination.nt,
	nom_referentiel = determination.referentiel,
	ce_zone_geo = id_zone_geo,
	zone_geo = zone_geo,
	lieudit = lieudit,
	station = station,
	milieu = milieu,
	mots_cles_texte = mots_cles_texte,
	commentaire = commentaire,
	ce_utilisateur = auteur.id,
	nom_utilisateur = auteur.nom,
	prenom_utilisateur = auteur.prenom,
	courriel_utilisateur = auteur.courriel"
; Texte du tag "à déterminer"
tag_adeterminer = aDeterminer
;
nb_commentaires_discussion = 1

[images]
; Masque de filtrage possible pour la consultation :
; Dans fichier config : "auteur,date,"
masques_possibles = "protocole,
	masque, masque.famille, masque.genre, masque.espece,
	masque.referentiel, masque.ns, masque.nn, masque.nt,
	masque.commune, masque.departement, masque.id_zone_geo,
	masque.auteur, masque.date, masque.type, masque.milieu,
	masque.tag, masque.tag_cel, masque.tag_del,
	tri, ordre, format, navigation.depart, navigation.limite"
; Valeurs par défaut pour les paramètres de l'url :
parametres_valeurs_defaut = "
	navigation.depart = 0,
	navigation.limite = 10,
	tri = date_transmission,
	ordre = desc,
	format = XL"
; Mapping champs JSON / champs base de données : pour la vue v_del_image
mapping = "
	id_image = id_image,
	hauteur = hauteur,
	date_prise_de_vue = date,
	nom_original = nom_original,
	i_mots_cles_texte = mots_cles_texte_img"

[votes]
; Mapping champs JSON / champs base de données :
mapping = "
	id_vote = vote.id,
	valeur = vote,
	ce_protocole = protocole.id,
	ce_proposition = proposition.id,
	ce_image = image.id,
	ce_utilisateur = auteur.id,
	nom = auteur.nom,
	prenom = auteur.prenom,
	courriel = auteur.courriel,
	date = date,
	id_protocole = protocole.id,
	intitule = protocole.intitule,
	descriptif = protocole.descriptif,
	tag = protocole.tag,
	mots_cles = protocole.mots_cles"

[protocoles]
; Mapping champs JSON / champs base de données :
mapping = "
	ce_protocole = protocole.id,
	id_protocole = protocole.id,
	intitule = protocole.intitule,
	descriptif = protocole.descriptif,
	tag = protocole.tag,
	mots_cles = protocole.mots_cles"